#!/bin/bash

#---------------------------------------------------------------------------------------------- 
function gitReferenceBranch()
{
    local ref="$(git config --get core.branch)"
    [ -z "$ref" ] && ref='main'
    echo $ref
}

#---------------------------------------------------------------------------------------------- 


# do nothing when we are not in a GIT directory
if [ $(git rev-parse --is-inside-work-tree) != 'true' ]; then
    echo -e "    \e[93m$(pwd) is not a GIT directory\e[0m"
    exit 0
fi

declare branch="${1:?}"
declare ref="${2:-$(gitReferenceBranch)}"
[ $(git rev-parse --verify --quiet "origin/$ref" &> /dev/null ; echo $?) -eq 0 ] || exit 0


declare -i count=0
while read -r test_branch; do

    [ "$test_branch" != "$ref" ] && continue
    (( count++ )) ||:

done < <(git for-each-ref --format="%(refname:lstrip=2)" refs/heads)


# do nothing when $ref does not exist
if [ $count -eq 0 ]; then
    echo -e "    \e[93m${ref} branch does not exist\e[0m"
    exit 0
fi

git checkout $ref
git pull
git branch -D $branch
git push origin -d $branch
git checkout -b $branch
git push origin -u $branch
