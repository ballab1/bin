#!/bin/bash

function gitMainBranch()
{
    local master="$(git config --get core.branch)"
    [ -z "$master" ] && master='master'
    echo $master
}



# do nothing when we are not in a GIT directory
if [ $(git rev-parse --is-inside-work-tree) != 'true' ]; then
    echo -e "    \e[93m$(pwd) is not a GIT directory\e[0m"
    exit 0
fi

declare branch="${1:?}"
declare master="${2:-$(gitMainBranch)}"

declare -i count=0
while read -r test_branch; do

    [ "$test_branch" != "$master" ] && continue
    (( count++ )) ||:

done < <(git for-each-ref --format="%(refname:lstrip=2)" refs/heads)


# do nothing when $master does not exist
if [ $count -eq 0 ]; then
    echo -e "    \e[93m${master} branch does not exist\e[0m"
    exit 0
fi

git checkout $master
git pull
git br -D $branch
git push origin -d $branch
git checkout -b $branch
git push origin -u $branch
