#!/bin/bash

# Use the Unofficial Bash Strict Mode
set -o errexit
set -o nounset
set -o pipefail
IFS=$'\n\t'

declare DIR=prod

set -o verbose
cd ~/"$DIR"
docker-compose down
sudo find -L vols/log -type f ! -name '.*' -delete
CONTAINER_TAG=latest docker-compose up -d
set +o verbose

declare container line
declare -a containers lines
mapfile -t containers < <( docker network inspect "${DIR}_default" | jq '.[].Containers[].Name' | awk -F '"' '{print $2}')
declare -A finished=( )
for container in mysql blue grafana; do
    [ $(grep -c "$container" <<< $(printf "%s\n" "${containers[@]}")) -gt 0 ] && finished[$container]='0'
done
while [ ${#finished[*]} -lt ${#containers[*]} ]; do
    sleep 4
    lines=()
    for container in "${containers[@]}"; do
        [ container == 'mysql' ] && continue
        declare text="$(docker logs "${container,,}" 2>&1 | grep  "Finished executing startup")"
        [ -z "$text" ] && continue
        [ "${finished[${container,,}]:-}" ] && continue
        finished[${container,,}]="$text"
        lines+=( "$(sed -Ee 's|^.+Finished executing startup scripts after ||' <<< "$text" | awk -F ':' '{ print ((($1 * 60) + $2) * 60) + $3 }')_${container,,}" )
    done
    for line in $(printf "%s\n" "${lines[@]}" | sort -t '_' -k 1n,2); do
        container="${line##*_}"
        echo "${finished[${container,,}]}"
    done
done


:> run.log
for container in "${containers[@]}"; do
    docker logs "$container" >> run.log 2>&1
done
