#!/bin/bash

#############################################################################
#
#   update utilities
#
#############################################################################

function gitReferenceBranch()
{
    local ref="$(git config --get core.branch)"
    [ -z "$ref" ] && ref='main'
    echo $ref
}

#---------------------------------------------------------------------------------------------- 


declare -r REF=$(gitReferenceBranch) 
#[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" == "true" ] || exit 0
#[ $(git rev-parse --verify --quiet "origin/$REF" &> /dev/null ; echo $?) -eq 0 ] || exit 0

declare -a dirs

cd ~

echo
echo -en '\e[97mfinding "bashlib" directories\e[0m'
mapfile -t dirs < <( sudo find . -mount -name docker.bashlib -type f | xargs dirname )
echo ":  ${#dirs[*]} found"
echo
for dir in "${dirs[@]}"; do
    echo -e "\\e[95mEntering ${dir}\\e[0m"
    pushd "$dir" > /dev/null
    git tag --delete $(git tag --list)
    git fetch --all --tags
    git checkout origin/$REF
    popd > /dev/null
    echo
done

echo
echo -en '\e[97mfinding "utilities" directories\e[0m'
mapfile -t dirs < <( sudo find . -mount -name docker-utilities -type f | xargs dirname )
echo ": ${#dirs[*]} found"
echo
for dir in "${dirs[@]}"; do
    echo -e "\\e[95mEntering ${dir}\\e[0m"
    pushd "$dir" > /dev/null
    git tag --delete $(git tag --list)
    git fetch --all --tags
    git checkout origin/$REF
    popd > /dev/null
    echo
done

echo
echo -en '\e[97mfinding "parent" directories\e[0m'
mapfile -t dirs < <( sudo find . -mount -name docker-utilities -type f | xargs dirname | xargs dirname )
echo ": ${#dirs[*]} found"
for dir in "${dirs[@]}"; do
    [ -e "${dir}/.git" ] || continue
    echo -e "\\e[95mEntering ${dir}\\e[0m"
    pushd "$dir" > /dev/null
    git keep
    popd > /dev/null
    echo
done
