#!/bin/bash

#---------------------------------------------------------------------------------------------- 
function gitReferenceBranch()
{
    local ref="$(git config --get core.branch)"
    [ -z "$ref" ] && ref='master'
    echo $ref
}

#---------------------------------------------------------------------------------------------- 

declare -r REF=$(gitReferenceBranch)
[ "$(git rev-parse --is-inside-work-tree 2>/dev/null)" == "true" ] || exit 0
[ $(git rev-parse --verify --quiet "origin/$REF" &> /dev/null ; echo $?) -eq 0 ] || exit 0

declare commit="$(git rev-parse HEAD~1)"
declare message="$(git log -1 --format=%s)" 

git checkout $REF
git add -A
git commit -m ":git keep: $(date)"
git reset --soft $commit
git commit -m "$message"
git push -f       

if [ $(git ls-remote --heads | grep -c 'refs/heads/dev') -ne 0 ]; then
    git checkout dev
    git reset --hard $REF
    git push -f
    git checkout $REF
    git branch -D dev
fi

git checkout origin/$REF
git branch -D $REF
git log --graph --abbrev-commit --decorate --all -n 16 \
        --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
